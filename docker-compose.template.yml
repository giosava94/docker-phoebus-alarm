version: "3"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=ruok"
    volumes:
      - zookeper-data:/var/lib/zookeeper/data
      - zookeper-logs:/var/lib/zookeeper/log
    healthcheck:
      test: echo ruok | nc localhost 2181 || exit -1
      start_period: 10s
      interval: 5s
      timeout: 10s
      retries: 10

  broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 300000
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CREATE_TOPICS:
        "accelerator:1:1:compact --config=segment.ms=10000 --config=min.cleanable.dirty.ratio=0.01 --config=min.compaction.lag.ms=1000, \
        acceleratorCommand:1:1:delete --config=segment.ms=10000 --config=min.cleanable.dirty.ratio=0.01 --config=min.compaction.lag.ms=1000 --config=retention.ms=20000 --config=delete.retention.ms=1000 --config=file.delete.delay.ms=1000, \
        acceleratorTalk:1:1:delete --config=segment.ms=10000 --config=min.cleanable.dirty.ratio=0.01 --config=min.compaction.lag.ms=1000 --config=retention.ms=20000 --config=delete.retention.ms=1000 --config=file.delete.delay.ms=1000"
    volumes:
      - kafka-data:/var/lib/kafka/data
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 10s
      interval: 5s
      timeout: 10s
      retries: 10

  alarm-server:
    image: giosava94/phoebus-alarm-server:4.7.1
    container_name: alarm-server
    depends_on:
      broker:
        condition: service_healthy
    command: -noshell -config accelerator -server localhost:9092
    volumes:
      - ./xml:/alarm-server/xml
    network_mode: "host"

  elasticsearch:
    image: elasticsearch:7.17.9
    container_name: elasticsearch
    depends_on:
      broker: 
        condition: service_healthy
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - elasticsearch-logs:/usr/share/elasticsearch/logs
      - elasticsearch-data:/usr/share/elasticsearch/data
    healthcheck:
      test: curl -s http://elasticsearch:9200 > /dev/null || exit 1
      start_period: 10s
      interval: 5s
      timeout: 10s
      retries: 10

  kibana:
    image: kibana:7.17.9
    container_name: kibana
    depends_on:
      elasticsearch: 
        condition: service_healthy
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      ELASTICSEARCH_URL: http://elasticsearch:9200

  alarm-logger:
    image: giosava94/phoebus-alarm-logger:4.7.1
    container_name: alarm-logger
    depends_on:
      elasticsearch: 
        condition: service_healthy
      alarm-server:
        condition: service_started
    ports:
      - "8080:8080"
    command: -noshell -topics accelerator -es_host elasticsearch -es_port 9200 -bootstrap.servers broker:29092

volumes:
  zookeper-logs:
  zookeper-data:
  kafka-data:
  elasticsearch-logs:
  elasticsearch-data:
